
&НаСервере
Процедура ЗаполнитьДоскуНаСервере()	
	Если Доска.пустая() Тогда
		УстановитьНовуюДоскуНаСервере(Доска,">");
	КонецЕсли;
	                                                              
	ЭтаФорма.Заголовок = строка(Доска);
	
	Для каждого Раздел из элементы.Разделы.ПодчиненныеЭлементы Цикл
		Раздел.Видимость = ложь;
	КонецЦикла;
	СписокРазделов.Очистить();
	
	Если не доска.Пустая() Тогда
		списокРазделовДоски = справочники.Разделы.Выбрать(,доска,,"Порядок");
		индекс = 0;
		Пока списокРазделовДоски.Следующий() Цикл
			Если списокРазделовДоски.ПометкаУдаления Тогда
				Продолжить;
			КонецЕсли;
			СписокРазделов.Добавить(списокРазделовДоски.Ссылка);
			ЗаполнитьРазделНаСервере(индекс);
			индекс = индекс + 1;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРазделНаСервере(Индекс)
	ЭлементФормы = Элементы["Раздел" + (Индекс+1)];
	ЭлементФормы.заголовок = СписокРазделов[Индекс].Значение.Наименование;
	ЭлементФормы.видимость = истина;
	
	ЭтаФорма[ЭлементФормы.Имя].очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭлементДоски.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ПорядокЭлементовВразделах.Порядок, 0) КАК Порядок,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Напоминания.Напоминание, 0) = 0
	|			ТОГДА -1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Напоминание
	|ИЗ
	|	Справочник.ЭлементыДоски КАК ЭлементДоски
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокЭлементовВРазделах КАК ПорядокЭлементовВразделах
	|		ПО ЭлементДоски.Ссылка = ПорядокЭлементовВразделах.Элемент
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КОЛИЧЕСТВО(Напоминания.ДатаНапоминания) КАК Напоминание,
	|			Напоминания.Элемент КАК Элемент
	|		ИЗ
	|			РегистрСведений.Напоминания КАК Напоминания
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Напоминания.Элемент) КАК Напоминания
	|		ПО ЭлементДоски.Ссылка = Напоминания.Элемент
	|ГДЕ
	|	ЭлементДоски.Владелец = &Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Запрос.УстановитьПараметр("Владелец", СписокРазделов[индекс].Значение.Ссылка);
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаЗапроса.Количество() Тогда
		  ЭлементФормы.Заголовок = ЭлементФормы.Заголовок + "(" + ВыборкаЗапроса.Количество() + ")";
	КонецЕсли;
	
	Пока ВыборкаЗапроса.Следующий() Цикл
		нСтрЭлемент = ЭтаФорма["Раздел" + (Индекс+1)].добавить();
		нСтрЭлемент.Элемент = ВыборкаЗапроса.ссылка;
		нСтрЭлемент.Картинка = ВыборкаЗапроса.Напоминание;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура РазделПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = истина;
	НомерТекущегоРаздела = число(СтрЗаменить(Элемент.Имя,"Раздел",""));
	ТекущийРаздел = СписокРазделов[номерТекущегоРаздела-1].Значение;
	ФормаЭлементыДоски = ПолучитьФорму("Справочник.ЭлементыДоски.ФормаОбъекта");
	ФормаЭлементыДоски.объект.Владелец = ТекущийРаздел;
	ФормаЭлементыДоски.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура РазделПередУдалением(Элемент, Отказ)
	Если Не Элемент.ТекущиеДанные.Элемент.пустая() Тогда
		УдалитьЭлементНаСервере(Элемент.ТекущиеДанные.Элемент);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьЭлементНаСервере(Элемент)
	ЭлементОбъект = Элемент.ПолучитьОбъект();
	ЭлементОбъект.Удалить();
КонецПроцедуры//

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Добавление элемента в раздел" Тогда
		индекс = 0;
		для индекс = 0 по СписокРазделов.количество()-1 цикл
			ЗаполнитьРазделНаСервере(индекс);
			индекс = индекс + 1;	
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РазделВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	ПоказатьЗначение(,Элемент.ТекущиеДанные.Элемент); 
КонецПроцедуры

&НаКлиенте
Процедура СменаДоскиВлево(Команда)
	УстановитьНовуюДоскуНаСервере(Доска,"<");
	ЗаполнитьДоскуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СменаДоскиВправо(Команда)	
	УстановитьНовуюДоскуНаСервере(Доска,">");
	ЗаполнитьДоскуНаСервере();
КонецПроцедуры


&НаСервереБезКонтекста
Процедура УстановитьНовуюДоскуНаСервере(Доска,Шаг)//Ден  2016 10 14 ---	
	Если Доска.пустая() Тогда
		НомерДоски = 0;
	иначе
		НомерДоски = Доска.НомерДоски;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Доски.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Доски КАК Доски
		|ГДЕ
		|	Доски.НомерДоски #Шаг# &НомерДоски
		|
		|УПОРЯДОЧИТЬ ПО
		|	Доски.НомерДоски";
	
	Запрос.УстановитьПараметр("НомерДоски",НомерДоски);	
	запрос.Текст = СтрЗаменить(запрос.Текст,"#Шаг#",Шаг);
	Если Шаг = "<" Тогда
		запрос.Текст = запрос.Текст + " УБЫВ";
	КонецЕсли;
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаЗапроса.Следующий() Тогда
		Доска = ВыборкаЗапроса.Ссылка;
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Доски.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Доски КАК Доски
	|
	|УПОРЯДОЧИТЬ ПО
	|	Доски.НомерДоски";
	
	Если Шаг = "<" Тогда
		запрос.Текст = запрос.Текст + " УБЫВ";
	КонецЕсли;
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
		
	Если ВыборкаЗапроса.Следующий() Тогда
		Доска = ВыборкаЗапроса.Ссылка;
	иначе
		Сообщить("Не найдено ни одной доски!");
	КонецЕсли;	
КонецПроцедуры//

&НаКлиенте
Процедура Добавить1(Команда)
	ТекущийРаздел = СписокРазделов[0].Значение;
	ФормаЭлементыДоски = ПолучитьФорму("Справочник.ЭлементыДоски.ФормаОбъекта");
	ФормаЭлементыДоски.объект.Владелец = ТекущийРаздел;
	ФормаЭлементыДоски.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура Удалить1(Команда)	
	УдалитьЭлементНаСервере(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Элемент);
	ЗаполнитьРазделНаСервере(0);	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх1(Команда)
	  ПереместитьЭлементНаКлиенте(0,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз1(Команда)
	ПереместитьЭлементНаКлиенте(0,Ложь);		
КонецПроцедуры

&НаКлиенте
Процедура Добавить2(Команда)
	ТекущийРаздел = СписокРазделов[1].Значение;
	ФормаЭлементыДоски = ПолучитьФорму("Справочник.ЭлементыДоски.ФормаОбъекта");
	ФормаЭлементыДоски.объект.Владелец = ТекущийРаздел;
	ФормаЭлементыДоски.Открыть();	
КонецПроцедуры

&НаКлиенте
Процедура Удалить2(Команда)	
	УдалитьЭлементНаСервере(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Элемент);
	ЗаполнитьРазделНаСервере(1);	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх2(Команда)
	  ПереместитьЭлементНаКлиенте(1,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз2(Команда)
	ПереместитьЭлементНаКлиенте(1,Ложь);		
КонецПроцедуры

&НаКлиенте
Процедура Добавить3(Команда)
	ТекущийРаздел = СписокРазделов[2].Значение;
	ФормаЭлементыДоски = ПолучитьФорму("Справочник.ЭлементыДоски.ФормаОбъекта");
	ФормаЭлементыДоски.объект.Владелец = ТекущийРаздел;
	ФормаЭлементыДоски.Открыть();	
КонецПроцедуры

&НаКлиенте
Процедура Удалить3(Команда)
	УдалитьЭлементНаСервере(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Элемент);
	ЗаполнитьРазделНаСервере(2);	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх3(Команда)
	  ПереместитьЭлементНаКлиенте(2,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз3(Команда)
	ПереместитьЭлементНаКлиенте(2,Ложь);		
КонецПроцедуры

&НаКлиенте
Процедура Добавить4(Команда)
	ТекущийРаздел = СписокРазделов[3].Значение;
	ФормаЭлементыДоски = ПолучитьФорму("Справочник.ЭлементыДоски.ФормаОбъекта");
	ФормаЭлементыДоски.объект.Владелец = ТекущийРаздел;
	ФормаЭлементыДоски.Открыть();	
КонецПроцедуры

&НаКлиенте
Процедура Удалить4(Команда)
	УдалитьЭлементНаСервере(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Элемент);
	ЗаполнитьРазделНаСервере(3);	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх4(Команда)
	  ПереместитьЭлементНаКлиенте(3,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз4(Команда)
	ПереместитьЭлементНаКлиенте(3,Ложь);		
КонецПроцедуры

&НаКлиенте
Процедура Добавить5(Команда)
	ТекущийРаздел = СписокРазделов[4].Значение;
	ФормаЭлементыДоски = ПолучитьФорму("Справочник.ЭлементыДоски.ФормаОбъекта");
	ФормаЭлементыДоски.объект.Владелец = ТекущийРаздел;
	ФормаЭлементыДоски.Открыть();	
КонецПроцедуры

&НаКлиенте
Процедура Удалить5(Команда)
	УдалитьЭлементНаСервере(ЭтаФорма.ТекущийЭлемент.ТекущиеДанные.Элемент);
	ЗаполнитьРазделНаСервере(4);	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх5(Команда)
	  ПереместитьЭлементНаКлиенте(4,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз5(Команда)
	ПереместитьЭлементНаКлиенте(4,Ложь);		
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементНаКлиенте(ИндексРаздела,НаправлениеВверх)
	ИмяРаздела = "Раздел" + (ИндексРаздела+1);
	ПеремещаемыйЭлемент = Элементы[ИмяРаздела].ТекущиеДанные.Элемент;
	ПереместитьЭлементНаСервере(ПеремещаемыйЭлемент,НаправлениеВверх);
	ЗаполнитьРазделНаСервере(ИндексРаздела);
	ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока = ЭтаФорма[ИмяРаздела].НайтиСтроки(новый структура("Элемент",ПеремещаемыйЭлемент))[0].ПолучитьИдентификатор();
КонецПроцедуры//

&НаСервере
Процедура ПереместитьЭлементНаСервере(Элемент,НаправлениеВверх)
	МенЗаписиЭлемента = РегистрыСведений.ПорядокЭлементовВРазделах.СоздатьМенеджерЗаписи();
	МенЗаписиЭлемента.Элемент = Элемент;
	МенЗаписиЭлемента.Прочитать();
	
	Если МенЗаписиЭлемента.Элемент.Пустая() Тогда
		сообщить("Элемент не имеет порядкового номера, необходимо перезаписать элемент");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПорядокЭлементовВразделах.Элемент КАК Элемент,
	|	ПорядокЭлементовВразделах.Порядок КАК Порядок
	|ИЗ
	|	РегистрСведений.ПорядокЭлементовВразделах КАК ПорядокЭлементовВразделах
	|ГДЕ
	|	ПорядокЭлементовВразделах.Элемент.Владелец = &Владелец
	|	И ПорядокЭлементовВразделах.Порядок";
	
	
	Если НаправлениеВверх Тогда
		Запрос.Текст = Запрос.Текст + "<&Порядок УПОРЯДОЧИТЬ ПО ПорядокЭлементовВразделах.Порядок УБЫВ";
	Иначе
		Запрос.Текст = Запрос.Текст + ">&Порядок УПОРЯДОЧИТЬ ПО ПорядокЭлементовВразделах.Порядок";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Порядок", МенЗаписиЭлемента.Порядок);
	Запрос.УстановитьПараметр("Владелец", Элемент.Владелец);
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаЗапроса.Следующий() Тогда
		ПорядокПервогоЭлемента = МенЗаписиЭлемента.Порядок;
		МенЗаписиЭлемента.Порядок = ВыборкаЗапроса.Порядок;
		МенЗаписиЭлемента.Записать();
		МенЗаписиВторогоЭлемента = РегистрыСведений.ПорядокЭлементовВРазделах.СоздатьМенеджерЗаписи();
		МенЗаписиВторогоЭлемента.Элемент = ВыборкаЗапроса.Элемент;
		МенЗаписиВторогоЭлемента.Порядок = ПорядокПервогоЭлемента;
		МенЗаписиВторогоЭлемента.Записать()
	КонецЕсли;
		
КонецПроцедуры//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьДоскуНаСервере();
КонецПроцедуры


