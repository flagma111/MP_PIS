
Процедура ПередУдалением(Отказ)//Ден  2016 10 11 ---
	НаборЗап = РегистрыСведений.Напоминания.СоздатьНаборЗаписей();
	НаборЗап.Записывать = истина;
	НаборЗап.Отбор.Элемент.Установить(Ссылка);	
	НаборЗап.Прочитать();
	Если НаборЗап.Количество() Тогда
		ОбщийВызовСервера.ЗаписатьНовоеЗначениеКонстанты("ПерезаписатьНапоминания",истина);
		НаборЗап.Очистить();
		НаборЗап.Записать();
	КонецЕсли;
	
	МенЗап = РегистрыСведений.ПорядокЭлементовВРазделах.СоздатьМенеджерЗаписи();
	МенЗап.Элемент = Ссылка;
	МенЗап.Удалить();
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ)//Ден  2016 10 11 ---
	попытка
	Если Ссылка.Пустая() Тогда
		нСсылка = справочники.ЭлементыДоски.ПолучитьСсылку();
		УстановитьСсылкуНового(нСсылка);
	КонецЕсли;          
	МенЗап = РегистрыСведений.ПорядокЭлементовВРазделах.СоздатьМенеджерЗаписи();
	МенЗап.Элемент = Ссылка;
	МенЗап.Прочитать();
	Если МенЗап.Порядок = 0 Тогда
		МенЗап.Элемент = Ссылка;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(ПорядокЭлементовВразделах.Порядок), 0) КАК Порядок
		|ИЗ
		|	РегистрСведений.ПорядокЭлементовВразделах КАК ПорядокЭлементовВразделах
		|ГДЕ
		|	ПорядокЭлементовВразделах.Элемент.Владелец = &Владелец";
		
		Запрос.УстановитьПараметр("Владелец", Владелец);
		
		ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
		
		Если ВыборкаЗапроса.Следующий() Тогда
			последнийНомер = ВыборкаЗапроса.Порядок;	
		иначе
			последнийНомер = 0;	
		КонецЕсли;
		МенЗап.Порядок = последнийНомер + 1;
		МенЗап.Записать();
	КонецЕсли;
исключение
	сообщить("Ошибка в модуле объекта");
		сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры
